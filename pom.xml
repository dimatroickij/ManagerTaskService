<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ru.croc.ctp.mts</groupId>
	<artifactId>manager-task-system</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<ctp.version>1.6.0.20180702</ctp.version>
		<generator-webclient.version>@~1.34</generator-webclient.version> <!-- example: @~1.34 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<file.encoding>UTF-8</file.encoding>
	</properties>


	<parent>
		<groupId>ru.croc.ctp</groupId>
		<artifactId>build-parent</artifactId>
		<version>1.6.0.20180702</version>
	</parent>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ru.croc.ctp</groupId>
				<artifactId>jxfw-bom</artifactId>
				<version>${ctp.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>ru.croc.ctp</groupId>
			<artifactId>jxfw-wc-loader</artifactId>
		</dependency>
		<dependency>
			<groupId>ru.croc.ctp</groupId>
			<artifactId>jxfw-jpa-compile</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.extended</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>ru.croc.ctp</groupId>
			<artifactId>jxfw-security</artifactId>
		</dependency>
		<dependency>
			<groupId>ru.croc.ctp</groupId>
			<artifactId>jxfw-transfer</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>ru.croc.ctp</groupId>
				<artifactId>jxfw-transfer-facade-gen-maven-plugin</artifactId>
				<configuration>
					<sourceDirectory>${project.build.directory}/generated-sources/xtend</sourceDirectory>
					<testSourceDirectory>${project.build.directory}/generated-test-sources/xtend</testSourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>generateFacade</id>
						<goals>
							<goal>generateFacade</goal>
							<goal>testGenerateFacade</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-sources/transfer-facade</outputDirectory>
							<testOutputDirectory>${project.build.directory}/generated-test-sources/transfer-facade</testOutputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>ru.croc.ctp</groupId>
				<artifactId>wcgen-maven-plugin</artifactId>
				<configuration>
					<jsModelMetaFileName>model-meta.js</jsModelMetaFileName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>build js</id>
						<phase>process-classes</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>grunt</executable>
							<commandlineArgs>build</commandlineArgs>
							<workingDirectory>wc</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/java</source>
								<source>${project.build.directory}/generated-sources/wcgen</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>install-wc-generator</id>
			<activation>
				<file>
					<missing>wc/node_modules/@croc/generator-webclient</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>install webclient yeoman generator</id>
								<phase>validate</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>npm</executable>
									<commandlineArgs>install
										@croc/generator-webclient${generator-webclient.version}</commandlineArgs>
									<workingDirectory>wc</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate-wc</id>
			<activation>
				<file>
					<missing>wc/src</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>generate webclient</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>yo-gen-run</executable>
									<commandlineArgs>-n @croc/webclient:client -c
										gen_params/client.json</commandlineArgs>
									<workingDirectory>wc</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<id>generate webclient</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>clean</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}/wc/src/app/domain</directory>
									<includes>
										<include>model-meta.js</include>
										<include>nls/ru/resources.js</include>
										<include>nls/en/resources.js</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>install-npm-and-bower-deps</id>
			<activation>
				<file>
					<missing>wc/vendor_components/croc.webClient</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>install npm dependencies</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>npm</executable>
									<commandlineArgs>install</commandlineArgs>
									<workingDirectory>wc</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>install or update bower dependencies</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bower</executable>
									<commandlineArgs>update</commandlineArgs>
									<workingDirectory>wc</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
